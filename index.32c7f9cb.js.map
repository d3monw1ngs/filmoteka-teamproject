{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MACMC,EAAsBC,SAASC,cAAc,eAGnD,SAASC,EAA0BC,GACjC,IAAIC,EAAc,GAGpB,IAAIC,EACAF,EAAc,GAChBE,EAAY,EACO,GAAfF,IACFC,GAAe,mGAIjBC,EADSF,GAAeG,GACZA,GAEAH,EAAa,EAGrBE,EAAY,IACdD,GAAe,2FACfA,GAAe,6DACXC,EAAY,IACdD,GAAe,iEAInB,IAAK,IAAIG,EAAIF,EAAWE,GA7BP,IA6B0BA,EAAIF,EAvBtB,EAuBoDE,IAEzEH,GADEG,IAAMJ,EACO,gEAAgEI,aAEhE,mDAAmDA,aAIlEF,EA/BqB,GANR,KAsCXA,EAhCmB,EANR,KAuCbD,GAAe,gEAEjBA,GAAe,+DAGbD,EA5Ca,KA6CfC,GAAe,wFAGjBL,EAAoBS,UAAYJ,C,CAGlC,IAAIK,EAAc,EAClBP,EAA0BO,GAG1BV,EAAoBW,iBAAiB,SAAUC,IAC7C,MAAMC,EAAeD,EAAME,OAE3B,GAAID,EAAaE,UAAUC,SAAS,uBAAyBH,EAAaI,GAAI,CAC5E,MAAMC,EAAaC,SAASN,EAAaO,aACpCC,MAAMH,KACTR,EAAcQ,EACdf,EAA0BO,IAC1B,EAAAZ,EAAAwB,UAASZ,G,MAIJG,EAAaE,UAAUC,SAAS,iBACnCN,EAAc,IAChBA,IACAP,EAA0BO,IAC1B,EAAAZ,EAAAwB,UAASZ,IAIJG,EAAaE,UAAUC,SAAS,cACnCN,EA5EW,KA6EbA,IACAP,EAA0BO,IAC1B,EAAAZ,EAAAwB,UAASZ,G","sources":["src/js/pagination.js"],"sourcesContent":["import { pageCall } from './script.js';\n\nconst totalPages = 20; \nconst paginationContainer = document.querySelector('.pagination');\n\n// Function to generate pagination buttons\nfunction generatePaginationButtons(currentPage) {\n  let buttonsHTML = '';\n  const numButtonsToShow = 5; // Number of pagination buttons to show\n\nlet startPage;\nif (currentPage < 4) {\n  startPage = 1;\n  if (currentPage != 1) {\n    buttonsHTML += `<button class=\"pagination-button previous-page\" \n    type=\"submit\" id=\"prev\">&#11164</button>`;\n  }\n} else if (currentPage >= totalPages - 2) {\n  startPage = totalPages - numButtonsToShow + 1;\n} else {\n  startPage = currentPage -2;\n}\n\n  if (startPage > 1) {\n    buttonsHTML += `<button class=\"pagination-button previous-page\" type=\"submit\" id=\"prev\">&#11164</button>`;\n    buttonsHTML += `<button class=\"pagination-button\" type=\"submit\">1</button>`;\n    if (startPage > 2) {\n      buttonsHTML += `<button class=\"pagination-button\" type=\"submit\">...</button>`;\n    }\n  }\n\n  for (let i = startPage; i <= totalPages && i < startPage + numButtonsToShow; i++) {\n    if (i === currentPage) {\n      buttonsHTML += `<button class=\"pagination-button current-page\" type=\"submit\">${i}</button>`;\n    } else {\n      buttonsHTML += `<button class=\"pagination-button\" type=\"submit\">${i}</button>`;\n    }\n  }\n\n  if (startPage + numButtonsToShow <= totalPages) {\n    if (startPage + numButtonsToShow < totalPages) {\n      buttonsHTML += `<button class=\"pagination-button\" type=\"submit\">...</button>`;\n    }\n    buttonsHTML += `<button class=\"pagination-button\" type=\"submit\">${totalPages}</button>`;\n  }\n\n  if (currentPage < totalPages) {\n    buttonsHTML += `<button class=\"pagination-button next-page\" type=\"submit\" id=\"next\">&#11166</button>`;\n  }\n\n  paginationContainer.innerHTML = buttonsHTML;\n}\n\nlet currentPage = 1; // Initialize current page number\ngeneratePaginationButtons(currentPage);\n\n// Event listener for pagination container\npaginationContainer.addEventListener('click', (event) => {\n  const targetButton = event.target;\n  \n  if (targetButton.classList.contains('pagination-button') && !targetButton.id) {\n    const pageNumber = parseInt(targetButton.textContent);\n    if (!isNaN(pageNumber)) {\n      currentPage = pageNumber; // Update currentPage variable\n      generatePaginationButtons(currentPage); \n      pageCall(currentPage);\n    }\n  }\n\n  else if (targetButton.classList.contains('previous-page')) {\n    if (currentPage > 1) {\n      currentPage--; \n      generatePaginationButtons(currentPage); \n      pageCall(currentPage);\n    }\n  }\n \n  else if (targetButton.classList.contains('next-page')) {\n    if (currentPage < totalPages) {\n      currentPage++; \n      generatePaginationButtons(currentPage); \n      pageCall(currentPage);\n    }\n  }\n});\n"],"names":["$2Ep0d","parcelRequire","$1bab9c519cfa82bc$var$paginationContainer","document","querySelector","$1bab9c519cfa82bc$var$generatePaginationButtons","currentPage1","buttonsHTML","startPage","$1bab9c519cfa82bc$var$totalPages","i","innerHTML","$1bab9c519cfa82bc$var$currentPage","addEventListener","event","targetButton","target","classList","contains","id","pageNumber","parseInt","textContent","isNaN","pageCall"],"version":3,"file":"index.32c7f9cb.js.map"}